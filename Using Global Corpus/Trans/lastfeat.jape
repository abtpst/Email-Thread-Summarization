Imports: { import static gate.Utils.*; }
Phase: EmailLastFeat
Input: EmailLast
Options: control = appelt

Rule: EmailLastFeat
(
	({EmailLast}):eml
)
-->
:eml{

//	emlAnnots.iterator().next().put("Value",stringFor(doc,emlAnnots));

	AnnotationSet nvn = inputAS.get("NVN").getContained(start(emlAnnots), end(emlAnnots));
	
	HashMap<String, Integer> nouncounter = new HashMap<String, Integer>();
	ArrayList<String> nouns = new ArrayList<String>();
	
	
	for (Annotation n : nvn)
	{
		//nouns=n.getFeatures().get("Nouns");
			//System.out.println(n.getFeatures().get("Nouns"));
		nouns=(ArrayList)n.getFeatures().get("Nouns");
		for(String s : nouns)
		{
		boolean hasNonAlpha = s.matches("^.*[^a-zA-Z0-9 ].*$");
			if(!s.isEmpty() && !hasNonAlpha && !s.equals("Quoted") && !s.equalsIgnoreCase("text"))
			{
			if(nouncounter.containsKey(s))
				nouncounter.put(s, nouncounter.get(s)+1);
						
			else
				nouncounter.put(s, 1);
			}		
		}	
		
	}
	/*System.out.println("Map");
	for ( Map.Entry<String, Integer> entry : nouncounter.entrySet()) 
		 {
			 System.out.println(entry.getKey()+" "+entry.getValue());
		 }*/
		 
		 emlAnnots.iterator().next().getFeatures().put("NounMap",nouncounter);
}